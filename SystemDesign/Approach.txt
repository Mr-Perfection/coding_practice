1. Scope the problem
  - No assumptions. Ask questions: understand use cases and constraints
2. Abstract design
  - Sketch up an abstract design that illustrates the basic components of the system and
    the relationships between them.
  - Try to sketch out the main components of the system at the high level.
    Maybe draw some diagrams but without too many details.
  - If database is involved, still don't think about what type of technology you will use and
    design the schema that will be used to store your data.


3. Bottlenecks
  - Consider the bottlenecks these components face when the system scales.



Pratice Quizzes

Let's say that you were given the following question at an interview:
"Design a system which allows its users to find web pages matching search terms that the user types.
It must be able to handle sets of pages that have up to 10,000,000 pages in them". Considering that
this design question is quite vague in its description what are suitable clarification questions to ask the interviewer?

a. What kinds of web pages will the system search through - with text, images, video, etc?
b. What are the expected load and distribution of the search queries?
c. How should I structure the data needed to match pages to search queries?
d. Should the search terms match exactly terms in the web pages or we will need some sort of fuzzy matching, too?

answers: a,b,d


Let's say that you are in the middle of a system design interview and you have outlined a high-level design solution
for the problem you were given. In such a situation which of the following things are RED FLAGS that something is not
right with this design and that it must be reconsidered?

The solution has a bottleneck, which could be resolved by adding a load balancer that handles the incoming user requests and distributes them to a number of machines

NO


With the current design the system would need to use tons of memory in order to be able to handle the number of requests defined by the interviews. This is a trade-off that the interviewer does not want to make.

YES


The system would NOT be able to guarantee data consistency for all expected users while this is a critical requirement from the interviewer.

YAES


The database used in the design won't be able to respond as quickly as needed to all incoming queries. However, the requirements are such that allow you to cache the responses to most of the queries and this would alleviate the load on the database significantly.

NO
